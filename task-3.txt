Ã–ÄŸrenci No:250541023 
AD-SOYAD:Ezgi Efsa GÃ¼leÃ§ 


ALGORITHM PastaPaylasimi(pasta_miktari, kisi_sayisi):

    # 1. Temel Durum (Base Case)
    IF kisi_sayisi == 0 THEN
        PRINT "PaylaÅŸÄ±m yapÄ±lamaz! KiÅŸi sayÄ±sÄ± sÄ±fÄ±r."
        RETURN
    END IF

    IF pasta_miktari == 0 THEN
        PRINT "HiÃ§ pasta yok, herkes aÃ§ kaldÄ± ğŸ˜¢"
        RETURN
    END IF

    IF kisi_sayisi == 1 THEN
        PRINT "TÃ¼m pasta tek kiÅŸiye verildi."
        RETURN
    END IF

    # 2. EÅŸit bÃ¶lÃ¼nebilirlik kontrolÃ¼
    IF pasta_miktari MOD kisi_sayisi == 0 THEN
        dilim_basi = pasta_miktari / kisi_sayisi
        FOR i FROM 1 TO kisi_sayisi:
            PRINT "KiÅŸi", i, "=>", dilim_basi, "dilim aldÄ±."
        END FOR
        RETURN
    END IF

    # 3. BÃ¶l ve Fethet YaklaÅŸÄ±mÄ±
    # BÃ¼yÃ¼k problemi iki alt gruba bÃ¶l
    yarim1_kisi = FLOOR(kisi_sayisi / 2)
    yarim2_kisi = kisi_sayisi - yarim1_kisi

    yarim1_pasta = FLOOR(pasta_miktari / 2)
    yarim2_pasta = pasta_miktari - yarim1_pasta

    PRINT "Alt gruplara bÃ¶lÃ¼nÃ¼yor..."
    PRINT "Grup 1:", yarim1_kisi, "kiÅŸi,", yarim1_pasta, "dilim pasta"
    PRINT "Grup 2:", yarim2_kisi, "kiÅŸi,", yarim2_pasta, "dilim pasta"

    # RekÃ¼rsif (tekrarlamalÄ±) Ã§aÄŸrÄ±lar
    CALL PastaPaylasimi(yarim1_pasta, yarim1_kisi)
    CALL PastaPaylasimi(yarim2_pasta, yarim2_kisi)

    # 4. Optimizasyon AdÄ±mÄ± (fazla kalanlarÄ± yeniden daÄŸÄ±t)
    kalan = pasta_miktari MOD kisi_sayisi
    IF kalan > 0 THEN
        PRINT kalan, "dilim kaldÄ±! Adil daÄŸÄ±tÄ±m iÃ§in yeniden paylaÅŸtÄ±rÄ±lÄ±yor..."
        FOR i FROM 1 TO kalan:
            PRINT "KiÅŸi", i, "fazladan 1 dilim aldÄ±."
        END FOR
  
AmaÃ§:

Bu algoritmanÄ±n amacÄ±, verilen pasta miktarÄ±nÄ± N kiÅŸi arasÄ±nda en adil ÅŸekilde paylaÅŸtÄ±rmaktÄ±r.

BÃ¶l ve fethet (divide and conquer) yaklaÅŸÄ±mÄ±yla bÃ¼yÃ¼k paylaÅŸÄ±m problemini kÃ¼Ã§Ã¼k alt problemlere ayÄ±rÄ±r,

her grupta eÅŸit daÄŸÄ±lÄ±m saÄŸlar ve kalan parÃ§alarÄ± optimize ederek adil sonuÃ§ Ã¼retir.



